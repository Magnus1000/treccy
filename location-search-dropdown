<script>
const searchInput = document.getElementById('search-bar');
const suggestionsBox = document.getElementById('suggestions');

const sessionToken = uuidv4(); // Assigning the generated UUID to sessionToken
console.log("Generated session token:", sessionToken);

// Mapbox Access Token
const accessToken = 'pk.eyJ1IjoibWFnbnVzMTk5MyIsImEiOiJjbGwyOHUxZTcyYTc1M2VwZDhzZGY3bG13In0._jM6tBke0CyM5_udTKGDOQ';

// Attach event listener to search input
searchInput.addEventListener('input', (e) => {
    const query = e.target.value.trim();

    if (query === "") {
        suggestionsBox.innerHTML = "";
        return; // Exit if the query is empty
    }

    // Call the Mapbox Geocoding endpoint
    fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${query}.json?access_token=${accessToken}&types=place,region,country`)
        .then(response => response.json())
        .then(data => {
            // Check if features are available
            if (data.features && data.features.length > 0) {
                // Clear any previous suggestions
                suggestionsBox.innerHTML = "";

                const suggestions = data.features;
                suggestions.forEach(suggestion => {
                    // Create suggestion text
                    const placeName = suggestion.place_name;
                    const suggestionItem = document.createElement('div');
                    suggestionItem.textContent = placeName;
                    suggestionsBox.appendChild(suggestionItem);

                    // Add click event listener to each suggestion
                    suggestionItem.addEventListener('click', () => {
                        // Populate the search bar with the selected suggestion
                        searchInput.value = placeName;
                        // Clear the suggestions
                        suggestionsBox.innerHTML = "";
                    });
                });
            }
        })
        .catch(error => console.error(error));
});
</script>
