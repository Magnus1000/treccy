<!-- Hide Checkbox CSS -->
<style>
input[type="checkbox"] {
    display: none;
}

.w-checkbox.checkbox-buttons.active-filter {
    background-color: #1B2B1C;
    color: #ffffff;
}
</style>

<!-- Combined Script -->
<script>
// This waits until the HTML is fully loaded
document.addEventListener('DOMContentLoaded', async () => {
    console.log("Document Ready...");

    // Function to initialize checkbox styling
    function initializeCheckboxStyling() {
        // Here you'll put the code related to checkbox styling.
    }

    // Call function to initialize checkbox styling
    initializeCheckboxStyling();

    // Adding a timeout to give time for the button to be available in the DOM
    setTimeout(() => {
        // Debug: Log before trying to find the button
        console.log("About to look for button...");

        const button = document.getElementById("step-3-finish");

        // Debug: Log the type of the button variable
        console.log("Type of button variable: ", typeof button);

        if (button !== null) {
            // Debug: Log if the button is found
            console.log("Button found");

            // Adding the new event listener
            button.addEventListener("click", onStep3FinishClicked);
        } else {
            // Debug: Log if the button is not found
            console.log("Button not found");
        }
    }, 1000); // Waiting 1 second before checking for the button
});
</script>

<script>
// Wait for MemberStack to load
let checkMemberstack = setInterval(() => {
  if (typeof window.$memberstackDom !== 'undefined') {
    clearInterval(checkMemberstack);
    initScript();
  }
}, 100);

function initScript() {
  // Getting reference to MemberStack DOM
  const memberstack = window.$memberstackDom;

  document.addEventListener('DOMContentLoaded', (event) => {
    document.getElementById('step-3-signup-form').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      if (typeof memberstack === 'undefined') {
        console.error('MemberStack is not defined');
        return;
      }

      await updateMemberJsonOnFormSubmit();
    });
  });

  async function updateMemberJsonOnFormSubmit() {
    let member = await memberstack.getCurrentMember();
    let memberJson = await memberstack.getMemberJSON();
    while (memberJson.data) {
      memberJson = memberJson.data;
    }

    // Initialize a new array to hold selected sports
    let newSportsArray = [];

    document.querySelectorAll('.disciplinefilter_checkbox').forEach(checkbox => {
      const sportValue = checkbox.getAttribute('filter-value');
      const isChecked = checkbox.checked;

      if (isChecked) {
        newSportsArray.push(sportValue);
      }
    });

    // Replace the entire 'sports' array with the new array
    memberJson.sports = newSportsArray;

    await memberstack.updateMemberJSON({ json: memberJson }).then(() => {
      console.log('Member data updated:', memberJson);
    }).catch((error) => {
      console.error('Failed to update member JSON:', error);
    });
  }
}
</script>

<script>
function initializeCheckboxStyling() {
    function updateCheckboxStyling() {
        console.log('Checkbox changed');  // Debug: Log when a checkbox changes
        const spanElement = this.nextElementSibling;
        const parentLabel = spanElement.closest(".w-checkbox.checkbox-buttons");
        console.log('Parent label:', parentLabel);  // Debug: Log the parent label

        if (this.checked) {
            console.log('Checkbox is checked');  // Debug: Log when checkbox is checked
            parentLabel.classList.add("active-filter");
        } else {
            console.log('Checkbox is not checked');  // Debug: Log when checkbox is not checked
            parentLabel.classList.remove("active-filter");
        }
    }

    const checkboxes = document.querySelectorAll(".w-checkbox.checkbox-buttons input[type='checkbox']");
    console.log('Found checkboxes:', checkboxes);  // Debug: Log the checkboxes found

    checkboxes.forEach(checkbox => {
        checkbox.addEventListener("change", updateCheckboxStyling);
        updateCheckboxStyling.call(checkbox);  // Call it initially for each checkbox
    });
}

document.addEventListener('DOMContentLoaded', async () => {
    console.log("Document Ready...");
    initializeCheckboxStyling();
    const memberstack = window.$memberstackDom;
});
</script>
